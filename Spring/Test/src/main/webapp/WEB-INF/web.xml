<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<!-- <web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"> -->

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 스프링 환경설정 파일인 root-context.xml 가장 먼저 확인 /Test/src/main/webapp/ 이게 기본경로인 
			듯 -->
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<!-- 스프링에 내장되어 있는 서블릿 클래스: "어떤 서블릿 클래스들이 있는지 살펴보자" -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<!-- DispathServlet에서 사용할 자원 -->
			<param-name>contextConfigLocation</param-name>
			<!-- servlet-context.xml에 정의되어 있는 객체 로딩할 것 -->
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<!-- 우선순위를 뜻한다 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- appServlet에서 DispatcherServlet 클래스 사용, mapping은 해당 클래스가 모든 요청을 가로챌 
		수 있도록 등록: 아직 무슨뜻인지.. -->
	<!-- url pattern을 이용해 특정 url을 이용해 사용할 수 있게 만들 수 있다: 어떻게 하는건지 살펴보자 -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
